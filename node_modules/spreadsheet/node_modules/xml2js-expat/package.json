{
  "name": "xml2js-expat",
  "version": "0.2.2",
  "description": "Simple XML to JavaScript object converter that uses Expat, a fast XML parser.",
  "homepage": "https://github.com/Poetro/node-xml2js-expat",
  "author": {
    "name": "Peter Galiba",
    "email": "poetro@gmail.com",
    "url": "Poetro"
  },
  "contributors": [
    {
      "name": "maqr",
      "email": "maqr.lollerskates@gmail.com",
      "url": "https://github.com/maqr/node-xml2js/"
    }
  ],
  "keywords": [
    "xml",
    "json",
    "expat"
  ],
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "node-expat": ">=1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://Poetro@github.com/Poetro/node-xml2js-expat.git"
  },
  "main": "./lib/xml2js",
  "readme": "node-xml2js-expat\n==\n\nDescription\n--\nSimple XML to JavaScript object converter.  Uses [node-expat](https://github.com/astro/node-expat).  Install with [npm](http://github.com/isaacs/npm) :)\nSee the tests for examples until docs are written.\nNote:  If you're looking for a full DOM parser, you probably want [JSDom](http://github.com/tmpvar/jsdom).\n\nSimple usage\n--\n\n    var util = require('util'),\n        fs = require('fs'),\n        xml2js = require('xml2js-expat');\n\n    var parser = new xml2js.Parser(function(result, error) {\n        if (!error) {\n            console.log(util.inspect(result));\n        }\n        else {\n            console.error(error);\n        }\n        console.log('Done.');\n    });\n    fs.readFile(__dirname + '/foo.xml', function(err, data) {\n        if (parser.parseString(data)) {\n          console.log('xml2js: successfully parsed file.');\n        }\n        else {\n          console.error('xml2js: parse error: \"%s\"', parser.getError());\n        }\n    });\n\nThe Parser object has an event, that can be suscribed to with\n\n    parser.on('end', function (result, error) {});\n    // or\n    parser.addListener('end', function (result, error) {});\n\nThe Parser object supports the following encodings, that can be specified as the first parameter, in which case the callback should be the second. (Each argument is optional.)\n\n  - `UTF-8`\n  - `UTF-16`\n  - `ISO-8859-1`\n  - `US-ASCII`\n\nFor example:\n\n    var parser = new xml2js.Parser('UTF-8', function(result, error) {});\n\nor\n\n    var parser = new xml2js.Parser('UTF-8');\n    parser.on('end', function (result, error) {});\n",
  "readmeFilename": "README.md",
  "_id": "xml2js-expat@0.2.2",
  "dist": {
    "shasum": "75f34724aab0a3b1674aaa30f0e00f5289406e32"
  },
  "_from": "xml2js-expat@~ 0.2.0",
  "_resolved": "https://registry.npmjs.org/xml2js-expat/-/xml2js-expat-0.2.2.tgz"
}
